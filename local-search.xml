<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello My World</title>
    <link href="/2021/08/19/Hello-My-World/"/>
    <url>/2021/08/19/Hello-My-World/</url>
    
    <content type="html"><![CDATA[<blockquote><p>谨以此文纪念该个人网站的诞生。</p></blockquote><p>本站基于 Hexo + GitHub 搭建，采用 Fluid 主题。</p><p>这篇文章记录了博客的搭建和配置历程，以及 Hexo 的使用指南。</p><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>早在大学入学时，班主任就告知了个人博客的重要性。</p><p>期间也看过许多漂亮的个人网站，也看到很多大神的技术博客，偶尔会心动一下。</p><p>于是乎，咕到了大二快结束时，打开了这个新世界的大门。</p><h2 id="搭建历程"><a href="#搭建历程" class="headerlink" title="搭建历程"></a>搭建历程</h2><h3 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a>1. 安装 Node.js</h3><p>官网：<a href="nodejs.org">nodejs.org</a></p><p>安装后在 cmd 命令行输入 <code>node -v</code> 即可查看版本。</p><h3 id="2-注册-GitHub"><a href="#2-注册-GitHub" class="headerlink" title="2. 注册 GitHub"></a>2. 注册 GitHub</h3><p>创建仓库：<a href="https://github.com/hewei2001/hewei2001.github.io">https://github.com/hewei2001/hewei2001.github.io</a></p><p>此时在浏览器中已经可以访问域名：<a href="https://hewei2001.github.io/">https://hewei2001.github.io</a></p><p>如果仓库取了其他名字，最后访问的域名会是：https://用户名.github.io/仓库名/</p><h3 id="3-下载-Git"><a href="#3-下载-Git" class="headerlink" title="3. 下载 Git"></a>3. 下载 Git</h3><p>官网：<a href="gitforwindows.org">gitforwindows.org</a></p><p>安装时按照默认配置即可，其中有个 MinTTY 终端模拟器的选项会默认选上，如果不选则会使用 Windows 自带的终端 cmd 显示 Git Bash。</p><p>安装后在 cmd 命令行输入 <code>git</code> 即可调出功能目录。</p><p>此后就在 cmd 中配置 Git 个人基本信息（绑定 GitHub）：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;hewei2001&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;631670924@qq.com&quot;</span><br></code></pre></div></td></tr></table></figure><p>配置完才后续才可以正确部署远程仓库（详见 Git 教学）。</p><h3 id="4-配置-GitHub-SSH"><a href="#4-配置-GitHub-SSH" class="headerlink" title="4. 配置 GitHub SSH"></a>4. 配置 GitHub SSH</h3><p>该步骤旨在建立当前主机与 GitHub 的安全连接，以后提交/拉取仓库才不需要重复输入密码。</p><p>打开 Git Bash 输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;631670924@qq.com&quot;</span> <span class="hljs-comment"># 获取 SSH Key</span><br></code></pre></div></td></tr></table></figure><p>完成后，在对应路径下找到 .ssh 文件夹中的 id_rsa.pub 文件，用记事本打开拷贝。</p><p>在 GitHub 个人设置中找到 SSH，新建，输入 Key。</p><p>配置后可以用如下命令测试是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ ssh -T git@github.com<br><span class="hljs-comment"># 运行结果出现类似如下即表示成功</span><br><span class="hljs-comment"># Hi hewei2001! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></div></td></tr></table></figure><h3 id="5-安装-Hexo"><a href="#5-安装-Hexo" class="headerlink" title="5. 安装 Hexo"></a>5. 安装 Hexo</h3><p>官网：<a href="hexo.io">hexo.io</a>，有中文官网。</p><p>在电脑中新建 Blog 文件夹，如 <code>D:\Blog</code>。</p><p>在 cmd 命令行打开 D 盘，用 <code>cd Blog</code>命令进入 Blog 子目录。或者在文件夹路径栏直接输入 <code>cmd</code>。</p><p>输入 Hexo 官网上的全局安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ npm install hexo-cli -g<br></code></pre></div></td></tr></table></figure><p>输入初始化部署命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo init hewei2001<br></code></pre></div></td></tr></table></figure><p>即可在 Blog 目录下新建<strong>博客文件夹</strong> hewei2001。用 <code>cd hewei2001</code>命令进入博客子目录。</p><p>输入安装 Node.js 包管理器命令，安装所有的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ npm install<br></code></pre></div></td></tr></table></figure><p>输入生成本地预览命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo s<br></code></pre></div></td></tr></table></figure><p>默认会生成 <code>localhost:4000</code> 端口的网址，在浏览器中可以访问。</p><h3 id="6-安装编辑器"><a href="#6-安装编辑器" class="headerlink" title="6. 安装编辑器"></a>6. 安装编辑器</h3><p>主要用于编写文档和修改配置，这里选择 VsCode 即可，打开路径 <code>hewei2001/source/_posts/hello-world.md</code>，随便修改内容后保存。</p><p>在 hewei2001 目录中运行 Git Bash。</p><p>依次输入清理缓存、生成博客文件（静态页面）、<strong>生成本地预览</strong>命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo cl <span class="hljs-comment"># 表示 clean</span><br>$ hexo g  <span class="hljs-comment"># 表示 generate</span><br>$ hexo s  <span class="hljs-comment"># 表示 server</span><br></code></pre></div></td></tr></table></figure><p>在浏览器中访问即可查看更改。之后按下 Ctrl + C 即可退出预览进程。</p><h3 id="7-将-Hexo-发布至-GitHub"><a href="#7-将-Hexo-发布至-GitHub" class="headerlink" title="7. 将 Hexo 发布至 GitHub"></a>7. 将 Hexo 发布至 GitHub</h3><p>打开路径 <code>hewei2001/_config.yml</code>，更改基础参数。</p><ul><li><code>#Site</code> 部分的站点描述自行修改</li><li><code>#URL</code> 部分，将链接改为 <a href="https://hewei2001.github.io/">https://hewei2001.github.io</a> </li><li><code>#Deployment</code> 部分<ul><li> <code>type</code> 改为 git</li><li><code>repo</code> 改为 <a href="https://github.com/hewei2001/hewei2001.github.io.git">https://github.com/hewei2001/hewei2001.github.io.git</a></li><li><code>branch</code> 改为 gh-pages</li></ul></li></ul><p>进入 Hexo 官网，复制 hexo-deployer-git 的安装命令，在 Git Bash 中安装。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ npm install hexo-deployer-git –save<br></code></pre></div></td></tr></table></figure><p>依次输入清理缓存、生成博客文件（静态页面）、<strong>提交远程仓库</strong>命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo cl<br>$ hexo g<br>$ hexo d  <span class="hljs-comment"># 表示 deploy，安装了上面的 hexo-deployer-git 才可用</span><br></code></pre></div></td></tr></table></figure><p>初次使用该操作可能会弹出一个 GitHub 登录界面，用于当前主机的身份验证。</p><p>在浏览器中访问 <a href="https://hewei2001.github.io/">https://hewei2001.github.io</a>  即可查看站点。</p><h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>本站采用的是 Fluid 主题，以下的配置在路径 <code>hewei2001/_config.fluid.yml</code> 中可以实现。该文件的介绍参见 <a href="https://hexo.fluid-dev.com/docs/guide/#%E6%96%87%E7%AB%A0%E9%A1%B5%E9%A1%B6%E9%83%A8%E5%A4%A7%E5%9B%BE">主题配置指南</a> 。以下仅介绍部分较为特殊的配置，其他内容可在指南中找到。</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p><code>lib</code>: 选择生成高亮的库，可选项有 highlightjs 和 prismjs，对应下面两组配置。</p><p>这里选择 <code>highlightjs</code>，将 <code>style</code> 修改为 <code>Night Owl</code> 风格，将 <code>bg_color</code> 修改为 <code>true</code> 以适配暗色代码框。</p><p>其他尝试过的主题还有 <code>Atom One Dark Reasonable</code>、<code>Vs 2015</code>、<code>Github Dark Dimmed</code>，都是不错的暗色风格。</p><p>唯一的缺憾可能是 Fluid 主题下不支持 Mac 风格的代码框，据说未来的版本会增加。</p><h3 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h3><p>Valine 是国内的一款极简风格的评论软件，也是 Fluid 支持的评论软件之一。在 <code>comment</code> 中选择 <code>valine</code>，之后找到相应的配置区域进行如下操作：</p><p>进入官网 <a href="https://leancloud.cn/">LeanCloud</a> 完成注册，然后在控制台创建一个项目后，获取密钥（App ID 和 App Key），在对应位置填入。其他内容选项可以在官网找到说明。</p><h3 id="访问人数统计"><a href="#访问人数统计" class="headerlink" title="访问人数统计"></a>访问人数统计</h3><h2 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h2><h3 id="部署到-Coding-Pages"><a href="#部署到-Coding-Pages" class="headerlink" title="部署到 Coding Pages"></a>部署到 Coding Pages</h3><p>Coding 可以算是国内的 GitHub，尽管并不是特别流行，但部署到上面可以使国内访问速度更快，还可以提交百度收录（GitHub 禁止了百度的爬取）。</p><p>注意：由于 Coding 在前段时间改版后，原有的个人版 Pages 下架，以企业版的形式重新开放，网上查到的教程大多不适配。本博客暂时不采用 Coding 部署。</p><h3 id="添加百度谷歌收录"><a href="#添加百度谷歌收录" class="headerlink" title="添加百度谷歌收录"></a>添加百度谷歌收录</h3><p>如果仅部署在 GitHub Pages，是无法被百度收录的，因为 GitHub 禁止了百度爬虫，最常见的解决办法是双线部署到 Coding Pages 和 GitHub Pages。</p><p>本站暂不考虑。</p><h3 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h3><p>有了 GitHub Pages 服务器自带的域名后，还可以到阿里云再购买一个自定义域名，然后将域名解析到博客的域名，具体过程如下：</p><ol><li>注册阿里云，实名认证后在购买下 hwcoder.top 域名。</li><li>打开域名控制台，进入<strong>域名解析</strong>列表，进入新买的域名，添加两条记录：<ul><li>主机记录：@；记录类型：A；记录值为 GitHub Pages 域名的 IP。</li><li>主机记录：www；记录类型：CNAME；记录值为 GitHub Pages 域名。</li></ul></li><li>在路径 <code>hewei2001/source</code> 下新建一个 <code>CNAME</code> 文件，里面填写我们买的域名，注意文件不需要任何后缀。</li><li>GitHub 中打开对应仓库，在 Setting 中找到 Pages，添加 Custom Domain 为新买的域名，旁边的一个 <code>Enforce HTTPS</code> 勾选后我们的网站就变为 <a href="https://hwcoder.top./">https://hwcoder.top。</a></li><li>在路径 <code>hewei2001/_config.yml</code> 的<code>#URL</code> 部分，就可以把链接改为新的。</li></ol><h2 id="其他功能配置"><a href="#其他功能配置" class="headerlink" title="其他功能配置"></a>其他功能配置</h2><p>以下配置是在 Fluid 主题中不具有的功能，通过各种插件实现。</p><h3 id="备份博客到-GitHub"><a href="#备份博客到-GitHub" class="headerlink" title="备份博客到 GitHub"></a>备份博客到 GitHub</h3><p>由于 Hexo 博客是静态托管的，所有的原始数据都保存在本地，如果哪一天电脑坏了，或者是误删了本地数据就很危险了。这里介绍一个备份插件的安装过程：</p><p>首先用 <code>hexo version</code> 命令查看 Hexo 的版本，如果是 3.x.x 以上，则用以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ npm install hexo-git-backup --save<br></code></pre></div></td></tr></table></figure><p>打开路径 <code>hewei2001/_config.yml</code>，添加如下代码，注意仓库地址后面要添加一个分支名：</p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">backup:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">Back</span> <span class="hljs-string">up</span> <span class="hljs-string">my</span> <span class="hljs-string">hwcoder.top</span> <span class="hljs-string">blog</span><br>  <span class="hljs-attr">repository:</span><br>    <span class="hljs-attr">github:</span> <span class="hljs-string">https://github.com/hewei2001/hewei2001.github.io.git,</span> <span class="hljs-string">backup</span><br></code></pre></div></td></tr></table></figure><p>最后使用以下命令备份你的博客：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo b  <span class="hljs-comment"># 代表 backup</span><br></code></pre></div></td></tr></table></figure><p>备份成功后可以在你的仓库的 backup 分支下看到备份的原始文件。</p><h3 id="压缩静态资源"><a href="#压缩静态资源" class="headerlink" title="压缩静态资源"></a>压缩静态资源</h3><h3 id="压缩图片"><a href="#压缩图片" class="headerlink" title="压缩图片"></a>压缩图片</h3><h2 id="Hexo-使用"><a href="#Hexo-使用" class="headerlink" title="Hexo 使用"></a>Hexo 使用</h2><p>以下介绍其他常用的 Hexo 操作命令，需要在博客文件夹下打开 Git Bash 使用。</p><h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo n <span class="hljs-string">&quot;文章名&quot;</span> <span class="hljs-comment"># 代表 new</span><br></code></pre></div></td></tr></table></figure><p>文章名不需要文件后缀，会自动生成 Markdown 文件，且带有预先定义的参数（在 Front-matter 中），如标题、日期、标签等。</p><p>以下是一些常用的参数及默认设置：</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>title</code></td><td>标题</td><td>文章的文件名</td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td>无</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td>无</td></tr><tr><td><code>excerpt</code></td><td>摘要，优先于 <code>&lt;!-- more --&gt;</code></td><td>无</td></tr><tr><td><code>index_img</code></td><td>文章封面图，用 /img/ 相对路径</td><td>无</td></tr></tbody></table><p>注意 Hexo 采用的是 GitHub Favored Markdown，书写规范与标准 Markdown 有微小区别，可以查阅 GitHub 上的说明。</p><h3 id="布局管理"><a href="#布局管理" class="headerlink" title="布局管理"></a>布局管理</h3><p>在上面新建文章时，我们还可以制定布局：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo n [layout] <span class="hljs-string">&quot;文章名&quot;</span> <br></code></pre></div></td></tr></table></figure><p>其中，<code>layout</code> 可替换为 post（文章，默认）、draft（草稿）、page（页面）。默认值可以在配置文件中修改 <code>default_layout</code> 来改动。不同布局的文件会存储在不同位置。</p><p>对于 page 布局，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 index.md 文件，页面布局顾名思义就是用来 DIY 我们博客页面的，不会被渲染。 </p><p>对于 draft 布局，在建立时会被保存到 <code>source/drafts</code> 文件夹中，但不会显示在页面上，如果我们不想某一篇文章显示在页面上，也可以把它移动到该文件夹中。</p><p>此外，还有关于 draft 的一些操作：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo s --draft  <span class="hljs-comment"># 在服务器预览时加入草稿文件</span><br>$ hexo publish [layout] <span class="hljs-string">&quot;文章名&quot;</span>  <span class="hljs-comment"># 将草稿发布为 post 或 page</span><br></code></pre></div></td></tr></table></figure><h3 id="修改默认布局"><a href="#修改默认布局" class="headerlink" title="修改默认布局"></a>修改默认布局</h3><p>上述布局管理中的三种布局，还对应这三种模板，这些模板可以在 <code>hewei2001/scaffolds</code> 路径下找到，我们可以提前修改 post 模板，这样每次新建文章时就不需要自己添加 Front-matter 了。</p><h3 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h3><p>在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><p>首先要创建「分类」和「标签」本身所在的页面，打开博客文件夹，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new page categories<br>$ hexo new page tags<br></code></pre></div></td></tr></table></figure><p>之后会在 <code>hewei2001/source</code> 路径下生成 <code>categories</code> 和 <code>tags</code> 文件夹，打开后里面各有一个 index.md，在其  Front-matter 中分别添加 <code>type：”categories“</code> 和 <code>type：”tags“</code> 即可。</p><p>此后就可以 post 布局的文章指定分类和标签了，也需要在对应文章的 Front-matter 中设置。Hexo 不支持给一篇文章指定多个同级分类，因此需要规划好。下面是指定方法：</p><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit">categories:<br> - 技术<br> - 博客  # 「博客」会作为「技术」的子类<br><span class="hljs-keyword">tags:</span><br> - Hexo<br> - Git  # 「Hexo」与「Git」是同级标签<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
